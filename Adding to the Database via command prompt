C:\Users\dotto\django\learningDjango>python manage.py makemigrations
Migrations for 'blog':
  blog\migrations\0001_initial.py
    - Create model Post

C:\Users\dotto\django\learningDjango>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, blog, contenttypes, sessions
Running migrations:
  Applying blog.0001_initial... OK

C:\Users\dotto\django\learningDjango>python manage.py sqlmigrate blog 0001
BEGIN;
--
-- Create model Post
--
CREATE TABLE "blog_post" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "content" text NOT NULL, "date_posted" datetime NOT NULL, "author_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE INDEX "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
COMMIT;

C:\Users\dotto\django\learningDjango>python manage.py shell
Python 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from blog.models import Post
>>> from django.contrib.auth.models import User
>>> User.objects.all
<bound method BaseManager.all of <django.contrib.auth.models.UserManager object at 0x00000249DD1D6FD0>>
>>> User.objects.all()
<QuerySet [<User: dotto>]>
>>> User.objects.first()
<User: dotto>
>>> User.objects.filter(username = "dotto")
<QuerySet [<User: dotto>]>
>>> User.objects.filter(username = "dotto").first()
<User: dotto>
>>> user = User.objects.filter(username = "dotto").first()
>>> user
<User: dotto>
>>> user.id
1
>>> user.pk
1
>>> user = User.objects.get(id=1)
>>> user
<User: dotto>
>>> Post.objects.all()
<QuerySet []>
>>> post_1 = Post(title="Blog 1", content="First Post Content!", author = user)
>>> post_1
<Post: Post object (None)>
>>> Post.objects.all()
<QuerySet []>
>>> post_1.save()
>>> Post.objects.all()
<QuerySet [<Post: Post object (1)>]>
>>> exit()
